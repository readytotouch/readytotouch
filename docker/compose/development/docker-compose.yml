version: "3.7"

services:
  app:
    container_name: "readytotouch_go_app"
    image: golang:1.24.5-alpine
    working_dir: /go/src/github.com/readytotouch/readytotouch
    volumes:
      - .:/go/src/github.com/readytotouch/readytotouch
      - ./.docker/volumes/go/tls-certificates:/var/lib/tls-certificates/data/
    environment:
      GIN_MODE: release
      ENVIRONMENT: ${ENVIRONMENT}
      POSTGRES_DSN: ${POSTGRES_DSN}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
      GITHUB_REDIRECT_URL: ${GITHUB_REDIRECT_URL}
      GITLAB_CLIENT_ID: ${GITLAB_CLIENT_ID}
      GITLAB_CLIENT_SECRET: ${GITLAB_CLIENT_SECRET}
      GITLAB_REDIRECT_URL: ${GITLAB_REDIRECT_URL}
      BITBUCKET_CLIENT_ID: ${BITBUCKET_CLIENT_ID}
      BITBUCKET_CLIENT_SECRET: ${BITBUCKET_CLIENT_SECRET}
      BITBUCKET_REDIRECT_URL: ${BITBUCKET_REDIRECT_URL}
      LINKEDIN_OAUTH2_TOKEN: ${LINKEDIN_OAUTH2_TOKEN}
      TLS_CERTIFICATES_DIR: /var/lib/tls-certificates/data/
      HOSTS: ${HOSTS}
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - postgres
      - redis
      - goose
    command: "sleep infinity"

  postgres:
    container_name: "readytotouch_postgres_db"
    image: postgres:15.3
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - ./.docker/volumes/postgresql/data/:/var/lib/postgresql/data/

  redis:
    container_name: "readytotouch_redis"
    image: "redis:latest"

  goose:
    container_name: "readytotouch_postgres_goose_migrations"
    build:
      context: ./docker/migrations
      dockerfile: Dockerfile
    volumes:
      - ./internal/storage/postgres/migrations:/db/migrations:ro
    environment:
      GOOSE_DRIVER: "postgres"
      GOOSE_DBSTRING: ${POSTGRES_DSN}
    depends_on:
      - postgres
