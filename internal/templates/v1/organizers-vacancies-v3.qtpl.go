// Code generated by qtc from "organizers-vacancies-v3.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

package v1

import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

func StreamOrganizersVacanciesV3(qw422016 *qt422016.Writer,
	organizerFeature OrganizerFeature,
	headerProfiles []SocialProviderUser,
	companies []Company,
	vacancies []PreparedVacancy,
	userVacancyFavoriteMap map[int64]bool,
	vacancyMonthlyViewsMap map[int64]int64,
	authQueryParams string,
) {
	qw422016.N().S(`<!DOCTYPE html>
<html lang="en">

<head>
    <title>`)
	qw422016.E().S(organizerFeature.Organizer.Title)
	qw422016.N().S(` jobs – remote and onsite developer vacancies | ReadyToTouch</title>
    <meta name="title" content="`)
	qw422016.E().S(organizerFeature.Organizer.Title)
	qw422016.N().S(` jobs – remote and onsite developer vacancies | ReadyToTouch">
    <meta name="description" content="Find top `)
	qw422016.E().S(organizerFeature.Organizer.Title)
	qw422016.N().S(` jobs from companies actively using `)
	qw422016.E().S(organizerFeature.Organizer.Title)
	qw422016.N().S(` in production. Explore remote and onsite developer positions updated weekly.">

    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link rel="author" type="text/plain" href="https://readytotouch.com/humans.txt"/>

    <meta property="og:title" content="`)
	qw422016.E().S(organizerFeature.Organizer.Title)
	qw422016.N().S(` jobs – find companies hiring `)
	qw422016.E().S(organizerFeature.Organizer.Title)
	qw422016.N().S(` developers">
    <meta property="og:description" content="Discover `)
	qw422016.E().S(organizerFeature.Organizer.Title)
	qw422016.N().S(` jobs in startups and product companies using `)
	qw422016.E().S(organizerFeature.Organizer.Title)
	qw422016.N().S(` in production.">
    <meta property="og:type" content="website">
    <meta property="og:image" content="https://readytotouch.com/assets/images/og/organizers-light.jpg">
    <meta property="og:url" content="https://readytotouch.com/`)
	qw422016.E().S(organizerFeature.Organizer.Alias)
	qw422016.N().S(`/jobs">

    <!-- JSON-LD (Schema.org) -->
    <script type="application/ld+json">
    {
      "@context": "https://schema.org",
      "@type": "WebPage",
      "name": "`)
	qw422016.E().S(organizerFeature.Organizer.Title)
	qw422016.N().S(` jobs",
      "description": "Find `)
	qw422016.E().S(organizerFeature.Organizer.Title)
	qw422016.N().S(` jobs in companies using `)
	qw422016.E().S(organizerFeature.Organizer.Alias)
	qw422016.N().S(` in production. Remote and onsite opportunities for developers.",
      "url": "https://readytotouch.com/organizers/`)
	qw422016.E().S(organizerFeature.Organizer.Alias)
	qw422016.N().S(`/jobs"
    }
    </script>

    `)
	streamfavicon(qw422016)
	qw422016.N().S(`
    `)
	streamorganizersFonts(qw422016)
	qw422016.N().S(`
    `)
	streamorganizersVacanciesV3Styles(qw422016)
	qw422016.N().S(`
    `)
	streamplausibleAnalytics(qw422016)
	qw422016.N().S(`
    `)
	streamga(qw422016)
	qw422016.N().S(`
</head>

<body>
<div class="main-wrapper main-wrapper--organizer-inner">
<header class="header">
  <div class="header__wrapper">
    <a href="/`)
	qw422016.E().S(organizerFeature.Organizer.Alias)
	qw422016.N().S(`" class="header__logo">
      <img
        width="30"
        height="30"
        class="header__logo-img"
        src="/assets/images/pages/organizer/`)
	qw422016.E().S(organizerFeature.Organizer.Logo)
	qw422016.N().S(`"
        alt="organizer logo"
      />
      <span class="header__logo-label">Organizer</span>
    </a>
    <div class="header__nav-overlay js-header-nav">
      <ul class="header__nav">
        <li class="header__nav-item">
          <a href="/`)
	qw422016.E().S(organizerFeature.Organizer.Alias)
	qw422016.N().S(`/companies" class="header__nav-link">Companies</a>
        </li>
        <li class="header__nav-item">
          <a href="/`)
	qw422016.E().S(organizerFeature.Organizer.Alias)
	qw422016.N().S(`/jobs" class="header__nav-link active">Jobs</a>
        </li>
        `)
	qw422016.N().S(`
      </ul>
      `)
	streamorganizersHeaderStarsV3(qw422016)
	qw422016.N().S(`
      `)
	if len(headerProfiles) > 0 {
		qw422016.N().S(`
        `)
		streamorganizersHeaderProfileV3(qw422016, headerProfiles)
		qw422016.N().S(`
      `)
	} else {
		qw422016.N().S(`
        <a href="/`)
		qw422016.E().S(organizerFeature.Organizer.Alias)
		qw422016.N().S(`/welcome`)
		qw422016.E().S(authQueryParams)
		qw422016.N().S(`" class="button button--bordered-black button--small-padding header__login-button">Log in</a>
      `)
	}
	qw422016.N().S(`
    </div>
    `)
	streamorganizersHamburgerV3(qw422016)
	qw422016.N().S(`
  </div>
</header>

<main class="main-content">
  <div class="container">
    <nav aria-label="breadcrumb" aria-labelledby="navigation through the bread crumbs" class="breadcrumb">
      <ul class="breadcrumb__list">
        <li class="breadcrumb__item">
          <a class="breadcrumb__link" href="/">Main</a>
        </li>
        <li class="breadcrumb__item">
          <a class="breadcrumb__link" href="/`)
	qw422016.E().S(organizerFeature.Organizer.Alias)
	qw422016.N().S(`">`)
	qw422016.E().S(organizerFeature.Organizer.Title)
	qw422016.N().S(`</a>
        </li>
        <li class="breadcrumb__item">
          <span class="breadcrumb__page" aria-current="page">`)
	qw422016.E().S(organizerFeature.Title)
	qw422016.N().S(`</span>
        </li>
      </ul>
    </nav>
  </div>

  <section class="search-container container">
    <!-- TODO-->
  </section>

  <div class="search-result mt-32">
      <!-- TODO-->
  </div>

</main>

`)
	streamorganizersFooterV3(qw422016)
	qw422016.N().S(`
</div>
</body>
<script src="/assets/js/organizers-vacancies-app.js?`)
	qw422016.N().D(appVersion)
	qw422016.N().S(`"></script>
</html>
`)
}

func WriteOrganizersVacanciesV3(qq422016 qtio422016.Writer,
	organizerFeature OrganizerFeature,
	headerProfiles []SocialProviderUser,
	companies []Company,
	vacancies []PreparedVacancy,
	userVacancyFavoriteMap map[int64]bool,
	vacancyMonthlyViewsMap map[int64]int64,
	authQueryParams string,
) {
	qw422016 := qt422016.AcquireWriter(qq422016)
	StreamOrganizersVacanciesV3(qw422016, organizerFeature, headerProfiles, companies, vacancies, userVacancyFavoriteMap, vacancyMonthlyViewsMap, authQueryParams)
	qt422016.ReleaseWriter(qw422016)
}

func OrganizersVacanciesV3(
	organizerFeature OrganizerFeature,
	headerProfiles []SocialProviderUser,
	companies []Company,
	vacancies []PreparedVacancy,
	userVacancyFavoriteMap map[int64]bool,
	vacancyMonthlyViewsMap map[int64]int64,
	authQueryParams string,
) string {
	qb422016 := qt422016.AcquireByteBuffer()
	WriteOrganizersVacanciesV3(qb422016, organizerFeature, headerProfiles, companies, vacancies, userVacancyFavoriteMap, vacancyMonthlyViewsMap, authQueryParams)
	qs422016 := string(qb422016.B)
	qt422016.ReleaseByteBuffer(qb422016)
	return qs422016
}
