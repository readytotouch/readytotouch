// Code generated by qtc from "organizers-vacancies-v3.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

package v1

import "strconv"

import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

func StreamOrganizersVacanciesV3(qw422016 *qt422016.Writer,
	organizerFeature OrganizerFeature,
	headerProfiles []SocialProviderUser,
	companies []Company,
	vacancies []PreparedVacancy,
	userVacancyFavoriteMap map[int64]bool,
	vacancyMonthlyViewsMap map[int64]int64,
	authQueryParams string,
) {
	qw422016.N().S(`<!DOCTYPE html>
<html lang="en">

<head>
    <title>`)
	qw422016.E().S(organizerFeature.Organizer.Title)
	qw422016.N().S(` jobs – remote and onsite developer vacancies | ReadyToTouch</title>
    <meta name="title" content="`)
	qw422016.E().S(organizerFeature.Organizer.Title)
	qw422016.N().S(` jobs – remote and onsite developer vacancies | ReadyToTouch">
    <meta name="description" content="Find top `)
	qw422016.E().S(organizerFeature.Organizer.Title)
	qw422016.N().S(` jobs from companies actively using `)
	qw422016.E().S(organizerFeature.Organizer.Title)
	qw422016.N().S(` in production. Explore remote and onsite developer positions updated weekly.">

    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link rel="author" type="text/plain" href="https://readytotouch.com/humans.txt"/>

    <meta property="og:title" content="`)
	qw422016.E().S(organizerFeature.Organizer.Title)
	qw422016.N().S(` jobs – find companies hiring `)
	qw422016.E().S(organizerFeature.Organizer.Title)
	qw422016.N().S(` developers">
    <meta property="og:description" content="Discover `)
	qw422016.E().S(organizerFeature.Organizer.Title)
	qw422016.N().S(` jobs in startups and product companies using `)
	qw422016.E().S(organizerFeature.Organizer.Title)
	qw422016.N().S(` in production.">
    <meta property="og:type" content="website">
    <meta property="og:image" content="https://readytotouch.com/assets/images/og/organizers-light.jpg">
    <meta property="og:url" content="https://readytotouch.com/`)
	qw422016.E().S(organizerFeature.Organizer.Alias)
	qw422016.N().S(`/jobs">

    <!-- JSON-LD (Schema.org) -->
    <script type="application/ld+json">
    {
      "@context": "https://schema.org",
      "@type": "WebPage",
      "name": "`)
	qw422016.E().S(organizerFeature.Organizer.Title)
	qw422016.N().S(` jobs",
      "description": "Find `)
	qw422016.E().S(organizerFeature.Organizer.Title)
	qw422016.N().S(` jobs in companies using `)
	qw422016.E().S(organizerFeature.Organizer.Alias)
	qw422016.N().S(` in production. Remote and onsite opportunities for developers.",
      "url": "https://readytotouch.com/organizers/`)
	qw422016.E().S(organizerFeature.Organizer.Alias)
	qw422016.N().S(`/jobs"
    }
    </script>

    `)
	streamfavicon(qw422016)
	qw422016.N().S(`
    `)
	streamorganizersFonts(qw422016)
	qw422016.N().S(`
    `)
	streamorganizersVacanciesV3Styles(qw422016)
	qw422016.N().S(`
    `)
	streamplausibleAnalytics(qw422016)
	qw422016.N().S(`
    `)
	streamga(qw422016)
	qw422016.N().S(`
</head>

<body>
<div class="main-wrapper main-wrapper--organizer-inner">
<header class="header">
  <div class="header__wrapper">
    <a href="/`)
	qw422016.E().S(organizerFeature.Organizer.Alias)
	qw422016.N().S(`" class="header__logo">
      <img
        width="30"
        height="30"
        class="header__logo-img"
        src="/assets/images/pages/organizer/`)
	qw422016.E().S(organizerFeature.Organizer.Logo)
	qw422016.N().S(`"
        alt="organizer logo"
      />
      <span class="header__logo-label">Organizer</span>
    </a>
    <div class="header__nav-overlay js-header-nav">
      <ul class="header__nav">
        <li class="header__nav-item">
          <a href="/`)
	qw422016.E().S(organizerFeature.Organizer.Alias)
	qw422016.N().S(`/companies" class="header__nav-link">Companies</a>
        </li>
        <li class="header__nav-item">
          <a href="/`)
	qw422016.E().S(organizerFeature.Organizer.Alias)
	qw422016.N().S(`/jobs" class="header__nav-link active">Jobs</a>
        </li>
        `)
	qw422016.N().S(`
      </ul>
      `)
	streamorganizersHeaderStarsV3(qw422016)
	qw422016.N().S(`
      `)
	if len(headerProfiles) > 0 {
		qw422016.N().S(`
        `)
		streamorganizersHeaderProfileV3(qw422016, headerProfiles)
		qw422016.N().S(`
      `)
	} else {
		qw422016.N().S(`
        <a href="/`)
		qw422016.E().S(organizerFeature.Organizer.Alias)
		qw422016.N().S(`/welcome`)
		qw422016.E().S(authQueryParams)
		qw422016.N().S(`" class="button button--bordered-black button--small-padding header__login-button">Log in</a>
      `)
	}
	qw422016.N().S(`
    </div>
    `)
	streamorganizersHamburgerV3(qw422016)
	qw422016.N().S(`
  </div>
</header>

<main class="main-content">
  <div class="container">
    <nav aria-label="breadcrumb" aria-labelledby="navigation through the bread crumbs" class="breadcrumb">
      <ul class="breadcrumb__list">
        <li class="breadcrumb__item">
          <a class="breadcrumb__link" href="/">Main</a>
        </li>
        <li class="breadcrumb__item">
          <a class="breadcrumb__link" href="/`)
	qw422016.E().S(organizerFeature.Organizer.Alias)
	qw422016.N().S(`">`)
	qw422016.E().S(organizerFeature.Organizer.Title)
	qw422016.N().S(`</a>
        </li>
        <li class="breadcrumb__item">
          <span class="breadcrumb__page" aria-current="page">`)
	qw422016.E().S(organizerFeature.Title)
	qw422016.N().S(`</span>
        </li>
      </ul>
    </nav>
  </div>

  <section class="search-container container">
    <div class="search search--projects search--organizer search--with-sort">
      <div class="search__input-group">
        <input class="search__input" id="js-vacancy-query" type="text" placeholder="Search" />
        `)
	qw422016.N().S(`
        <img class="search__icon" alt="Search icon" width="20" height="20" src="/assets/images/pages/common/search.svg" />
      </div>
      <button type="button" class="mobile-filter js-mobile-open-filter-container-button">
        <img
          src="/assets/images/pages/common/filter.svg"
          alt="Filter icon"
          width="16"
          height="16"
        />
        `)
	qw422016.N().S(`
      </button>
      `)
	qw422016.N().S(`
    </div>
  </section>

  <div class="search-result mt-32">
    <div class="container">
      <div class="search-result__wrapper">
        <!-- filters -->
        <aside class="search-result__filters js-filter-container">
          <div class="search-result__filter-group search-result__filter-group--wide">
            <div class="search-result__filter-header">
              <h2 class="search-result__filter-headline">Filters:</h2>
              <button id="js-criteria-reset" type="button" class="button button--light-link search-result__filter-headline-reset js-criteria-reset" style="visibility: hidden;">Reset all</button>
              <button type="button" class="button button--light-link search-result__filter-headline-reset-mobile js-mobile-close-filter-container-button">
                <img src="/assets/images/pages/common/cross-thin.svg" alt="cross icon" width="24" height="24">
              </button>
            </div>

            <div class="filters search-result__filters-list">
              `)
	qw422016.N().S(`

              <!-- Company type -->
              <div class="filters__group">
                <header class="filters__header filters__header--with-info">
                  <h4 class="filters__headline">Company type</h4>
                  <img
                    class="ml-14"
                    alt="info icon"
                    width="14"
                    height="14"
                    title="info"
                    src="/assets/images/pages/common/info.svg"
                  />
                </header>
                <div class="filters__elements">
                  <label class="checkbox filters__element">
                    <input class="js-criteria-company-type checkbox__input" type="checkbox" data-alias="product" />
                    <span class="checkbox__element"></span>
                    <span class="filters__element-text filters__element-text--truncated">Product</span>
                  </label>
                  <label class="checkbox filters__element">
                    <input class="js-criteria-company-type checkbox__input" type="checkbox" data-alias="startup" />
                    <span class="checkbox__element"></span>
                    <span class="filters__element-text filters__element-text--truncated">Startup</span>
                  </label>
                </div>
              </div>
              <!-- /Company type -->

              `)
	qw422016.N().S(`

              `)
	qw422016.N().S(`

              <!-- Industry -->
              <div class="filters__group">
                <header class="filters__header filters__header--with-info">
                  <h4 class="filters__headline">Industry</h4>
                  <img
                    class="ml-14"
                    alt="info icon"
                    width="14"
                    height="14"
                    title="info"
                    src="/assets/images/pages/common/info.svg"
                  />
                </header>
                <div class="filters__elements">
                  <div class="filters__elements-inner">
                    `)
	for _, industry := range industries {
		qw422016.N().S(`
                    <label class="checkbox filters__element">
                      <input class="js-criteria-company-industry checkbox__input" type="checkbox" data-alias="`)
		qw422016.E().S(industry.Alias)
		qw422016.N().S(`" />
                      <span class="checkbox__element"></span>
                      <span class="filters__element-text filters__element-text--truncated">`)
		qw422016.E().S(industry.Name)
		qw422016.N().S(`</span>
                    </label>
                    `)
	}
	qw422016.N().S(`
                  </div>
                </div>
              </div>
              <!-- /Industry -->

              `)
	qw422016.N().S(`

              `)
	qw422016.N().S(`

              <!-- Other -->
              <div class="filters__group">
                <header class="filters__header filters__header--with-info">
                  <h4 class="filters__headline">Other</h4>
                  <img
                    class="ml-14"
                    alt="info icon"
                    width="14"
                    height="14"
                    title="info"
                    src="/assets/images/pages/common/info.svg"
                  />
                </header>
                <div class="filters__elements">
                  <label class="checkbox filters__element">
                    <input class="js-criteria-has-employees-from-country checkbox__input" type="checkbox" data-alias="ukraine" />
                    <span class="checkbox__element"></span>
                    <span class="filters__element-text filters__element-text--truncated">Has Ukrainian employees</span>
                    <img
                      class="checkbox__content-image"
                      alt="Flag of Ukraine"
                      width="24"
                      height="24"
                      src="/assets/images/pages/common/flags/4x3/ua.svg"
                    />
                  </label>
                  <label class="checkbox filters__element">
                    <input class="js-criteria-has-employees-from-country checkbox__input" type="checkbox" data-alias="czechia" />
                    <span class="checkbox__element"></span>
                    <span class="filters__element-text filters__element-text--truncated">Has Czechs employees</span>
                    <img
                      class="checkbox__content-image"
                      alt="Flag of Czechia"
                      width="24"
                      height="24"
                      src="/assets/images/pages/common/flags/4x3/cz.svg"
                    />
                  </label>
                  `)
	qw422016.N().S(`
                  `)
	if organizerFeature.Organizer.Alias == "rust" {
		qw422016.N().S(`
                  <label class="checkbox filters__element">
                    <input id="js-criteria-rust-foundation-members" class="checkbox__input" type="checkbox" />
                    <span class="checkbox__element"></span>
                    <span class="filters__element-text filters__element-text--truncated">Rust Foundation Members</span>
                  </label>
                  `)
	}
	qw422016.N().S(`
                  <label class="checkbox filters__element">
                    <input id="js-criteria-remote" class="checkbox__input" type="checkbox" />
                    <span class="checkbox__element"></span>
                    <span class="filters__element-text filters__element-text--truncated">Remote</span>
                  </label>
                  <label class="checkbox filters__element">
                    <input id="js-criteria-in-favorites" class="checkbox__input" type="checkbox" />
                    <span class="checkbox__element"></span>
                    <span class="filters__element-text filters__element-text--truncated">Favorites</span>
                  </label>
                </div>
              </div>
              <!-- /Other -->

            </div>
            <footer class="search-result__filter-footer">
              <button type="button" class="button button--light-link search-result__filter-footer-button js-criteria-reset">Reset all</button>
              <button type="button" class="button button--black button--small js-mobile-close-filter-container-button">Apply</button>
            </footer>
          </div>
        </aside>
        <!-- /filters -->

        <div class="search-result--group">
          <!-- selected filters -->
          <div class="filter-used" style="visibility: hidden;">
            <div class="filter-used__title">Applied filters:</div>
            <ul id="js-vacancy-selected-criteria" class="filter-used__list"></ul>
          </div>
          <!-- /selected filters -->

          <div class="search-result__list">
            <div class="search-result__top-actions">
              <p class="search-result-found"><span id="js-result-count" class="search-result-found__amount">`)
	qw422016.N().D(len(companies))
	qw422016.N().S(`</span> results</p>
              `)
	qw422016.N().S(`
            </div>

            <!-- card list -->
            <div class="search-result__cards row-gap-8 mt-24">
              `)
	for _, vacancy := range latestVacancies(vacancies) {
		qw422016.N().S(`
                <div
                  class="js-vacancy card"
                  data-vacancy-id="`)
		qw422016.N().DL(vacancy.ID)
		qw422016.N().S(`"
                  data-vacancy-title="`)
		qw422016.E().S(vacancy.Title)
		qw422016.N().S(`"
                  data-vacancy-remote="`)
		qw422016.E().S(strconv.FormatBool(vacancy.Remote))
		qw422016.N().S(`"
                  data-company-name="`)
		qw422016.E().S(vacancy.Company.Name)
		qw422016.N().S(`"
                  data-company-type="`)
		qw422016.E().S(string(vacancy.Company.Type))
		qw422016.N().S(`"
                  data-company-industries="`)
		qw422016.E().S(aliases(vacancy.Company.Industries))
		qw422016.N().S(`"
                  data-company-has-employees-from-countries="`)
		qw422016.E().S(aliases(vacancy.Company.HasEmployeesFromCountries))
		qw422016.N().S(`"
                  data-company-rust-foundation-members="`)
		qw422016.E().S(strconv.FormatBool(vacancy.Company.RustFoundationMember))
		qw422016.N().S(`"
                >
                  <div class="card__vacancy">
					<aside class="card__action">
                      `)
		if userVacancyFavoriteMap[vacancy.ID] {
			qw422016.N().S(`
                        <button class="js-vacancy-favorite favorite card__action-button button-group__item in-favorite" title="Remove from favorites">
                          <svg xmlns="http://www.w3.org/2000/svg" xml:space="preserve" class="favorite__icon" viewBox="0 0 28 28">
                            <path
                              d="m14.5 22.1-.5-.3-.5.3-6.8 4.2c-.5.3-1.1-.1-.9-.7L7.5 18l.1-.6-.4-.4-5.9-5.2c-.3-.3-.3-.6-.2-.8.1-.2.3-.4.5-.4l7.9-.7.6-.1.2-.6 2.9-7.4c.2-.5 1-.5 1.2 0l3.1 7.3.2.5.6.1 7.9.7c.2 0 .4.2.5.5.1.3 0 .6-.2.7l-5.9 5.2-.4.4.1.6 1.8 7.7c.1.3 0 .5-.2.6-.2.1-.5.2-.8 0l-6.6-4z"
                            />
                          </svg>
                        </button>
                      `)
		} else {
			qw422016.N().S(`
                        <button class="js-vacancy-favorite favorite card__action-button button-group__item" title="Add to favorite">
                          <svg xmlns="http://www.w3.org/2000/svg" xml:space="preserve" class="favorite__icon" viewBox="0 0 28 28">
                            <path
                              d="m14.5 22.1-.5-.3-.5.3-6.8 4.2c-.5.3-1.1-.1-.9-.7L7.5 18l.1-.6-.4-.4-5.9-5.2c-.3-.3-.3-.6-.2-.8.1-.2.3-.4.5-.4l7.9-.7.6-.1.2-.6 2.9-7.4c.2-.5 1-.5 1.2 0l3.1 7.3.2.5.6.1 7.9.7c.2 0 .4.2.5.5.1.3 0 .6-.2.7l-5.9 5.2-.4.4.1.6 1.8 7.7c.1.3 0 .5-.2.6-.2.1-.5.2-.8 0l-6.6-4z"
                            />
                          </svg>
                        </button>
                      `)
		}
		qw422016.N().S(`

                      <button title="Hide vacancy" class="button-group__item button-group__item-sloth card__action-button-sloth"></button>
					</aside>
                    <figure class="card__header card__header--organizer">
                      <div class="card__logo-overlay">
                        `)
		if vacancy.Company.Logo.V2 != "" {
			qw422016.N().S(`
                        <img
                          class="card__logo"
                          alt="`)
			qw422016.E().S(vacancy.Company.Name)
			qw422016.N().S(` logo"
                          src="`)
			qw422016.E().S(logo72x72(vacancy.Company.Logo))
			qw422016.N().S(`"
                        />
                        `)
		}
		qw422016.N().S(`
                      </div>
                      <figcaption class="card__header-caption">
                        <a href="/v/`)
		qw422016.N().DL(vacancy.ID)
		qw422016.N().S(`" target="_blank" class="card__headline">`)
		qw422016.E().S(vacancy.Title)
		qw422016.N().S(`</a>
                        <a href="/`)
		qw422016.E().S(organizerFeature.Organizer.Alias)
		qw422016.N().S(`/companies/`)
		qw422016.E().S(vacancy.Company.Alias)
		qw422016.N().S(`" target="_blank" class="card__sub-headline">`)
		qw422016.E().S(vacancy.Company.Name)
		qw422016.N().S(`</a>
                        `)
		qw422016.N().S(`
                      </figcaption>
                    </figure>
                    <p class="js-vacancy-short-description card__text card__text--organizer">`)
		qw422016.E().S(vacancyDescription(vacancy))
		qw422016.N().S(`</p>
                    <div class="card__footer">
                      <div class="card__details">
                        <figure class="card__figure" title="`)
		qw422016.E().S(formatVacancyDate(vacancy.Date))
		qw422016.N().S(`">
                          <img
                            class="card__icon"
                            alt="calendar icon"
                            width="16"
                            height="16"
                            src="/assets/images/pages/online/calendar.svg"
                          />
                          <figcaption class="card__figcaption">`)
		qw422016.E().S(formatVacancyDiffDate(vacancy.Date))
		qw422016.N().S(`</figcaption>
                        </figure>
                        <figure class="card__figure" title="Monthly views: `)
		qw422016.N().DL(vacancyMonthlyViewsMap[vacancy.ID])
		qw422016.N().S(`">
                          <img
                            class="card__icon"
                            alt="eye icon"
                            width="16"
                            height="16"
                            src="/assets/images/pages/common/eye.svg"
                          />
                          <figcaption class="card__figcaption">Monthly views: `)
		qw422016.N().DL(vacancyMonthlyViewsMap[vacancy.ID])
		qw422016.N().S(`</figcaption>
                        </figure>
                      </div>
                      <a href="/v/`)
		qw422016.N().DL(vacancy.ID)
		qw422016.N().S(`" target="_blank" class="button button--bordered-gray button--gap-images">
                        `)
		if isLinkedInVacancyURL(vacancy.URL) {
			qw422016.N().S(`
                          <img
                            width="20"
                            height="20"
                            src="/assets/images/pages/organizer/linkedin.svg"
                            alt="LinkedIn logo"
                            class="hero__button-icon"
                          />
                        `)
		} else if isOttaVacancyURL(vacancy.URL) {
			qw422016.N().S(`
                          <img
                            width="20"
                            height="20"
                            src="/assets/images/pages/organizer/otta.svg"
                            alt="Otta logo"
                            class="hero__button-icon"
                          />
                        `)
		} else if isIndeedVacancyURL(vacancy.URL) {
			qw422016.N().S(`
                          <img
                            width="20"
                            height="20"
                            src="/assets/images/pages/organizer/indeed.png"
                            alt="Indeed logo"
                            class="hero__button-icon"
                          />
                        `)
		}
		qw422016.N().S(`
                        View source
                        <img
                          width="18"
                          height="18"
                          src="/assets/images/pages/common/external-link.svg"
                          alt="arrow black icon"
                          class="hero__button-icon"
                        />
                      </a>
                    </div>
                  </div>
                </div>
              `)
	}
	qw422016.N().S(`

              <!-- TODO -->
            </div>
            <!-- /card list -->

            `)
	qw422016.N().S(`
          </div>
        </div>
      </div>
    </div>
  </div>

</main>

`)
	streamorganizersFooterV3(qw422016)
	qw422016.N().S(`
</div>
</body>
<script src="/assets/js/organizers-vacancies-app.js?`)
	qw422016.N().D(appVersion)
	qw422016.N().S(`"></script>
</html>
`)
}

func WriteOrganizersVacanciesV3(qq422016 qtio422016.Writer,
	organizerFeature OrganizerFeature,
	headerProfiles []SocialProviderUser,
	companies []Company,
	vacancies []PreparedVacancy,
	userVacancyFavoriteMap map[int64]bool,
	vacancyMonthlyViewsMap map[int64]int64,
	authQueryParams string,
) {
	qw422016 := qt422016.AcquireWriter(qq422016)
	StreamOrganizersVacanciesV3(qw422016, organizerFeature, headerProfiles, companies, vacancies, userVacancyFavoriteMap, vacancyMonthlyViewsMap, authQueryParams)
	qt422016.ReleaseWriter(qw422016)
}

func OrganizersVacanciesV3(
	organizerFeature OrganizerFeature,
	headerProfiles []SocialProviderUser,
	companies []Company,
	vacancies []PreparedVacancy,
	userVacancyFavoriteMap map[int64]bool,
	vacancyMonthlyViewsMap map[int64]int64,
	authQueryParams string,
) string {
	qb422016 := qt422016.AcquireByteBuffer()
	WriteOrganizersVacanciesV3(qb422016, organizerFeature, headerProfiles, companies, vacancies, userVacancyFavoriteMap, vacancyMonthlyViewsMap, authQueryParams)
	qs422016 := string(qb422016.B)
	qt422016.ReleaseByteBuffer(qb422016)
	return qs422016
}
