// Code generated by qtc from "organizers-company-v3.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

package v1

import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

func StreamOrganizersCompanyV3(qw422016 *qt422016.Writer,
	organizerFeature OrganizerFeature,
	headerProfiles []SocialProviderUser,
	company Company,
	vacancies []PreparedVacancy,
	ukrainianUniversities []University,
	czechUniversities []University,
	favorite bool,
	userVacancyFavoriteMap map[int64]bool,
	vacancyMonthlyViewsMap map[int64]int64,
	stats CompanyStats,
	authQueryParams string,
) {
	qw422016.N().S(`<!DOCTYPE html>
<html lang="en">

<head>
	<title>`)
	qw422016.E().S(company.Name)
	qw422016.N().S(` â€“ company using `)
	qw422016.E().S(organizerFeature.Organizer.Title)
	qw422016.N().S(` | ReadyToTouch</title>
	<meta name="description" content="Improve your chances of getting a job by connecting with `)
	qw422016.E().S(organizerFeature.Organizer.Title)
	qw422016.N().S(` developers from `)
	qw422016.E().S(company.Name)
	qw422016.N().S(` and receiving further recommendations.">

	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
	<link rel="author" type="text/plain" href="https://readytotouch.com/humans.txt"/>
	<meta property="og:image" content="/assets/images/og/organizers-light.jpg">

    `)
	streamfavicon(qw422016)
	qw422016.N().S(`
    `)
	streamorganizersFonts(qw422016)
	qw422016.N().S(`
    `)
	streamorganizersCompanyV3Styles(qw422016)
	qw422016.N().S(`
    <script src="https://cdn.jsdelivr.net/npm/apexcharts@3.52.0"></script>
    `)
	streamplausibleAnalytics(qw422016)
	qw422016.N().S(`
    `)
	streamga(qw422016)
	qw422016.N().S(`
</head>

<body>
<div class="main-wrapper main-wrapper--organizer-inner">

`)
	streamorganizersFooterV3(qw422016)
	qw422016.N().S(`
</div>
<script src="/assets/js/organizers-company-app.js?`)
	qw422016.N().D(appVersion)
	qw422016.N().S(`"></script>
</body>
</html>
`)
}

func WriteOrganizersCompanyV3(qq422016 qtio422016.Writer,
	organizerFeature OrganizerFeature,
	headerProfiles []SocialProviderUser,
	company Company,
	vacancies []PreparedVacancy,
	ukrainianUniversities []University,
	czechUniversities []University,
	favorite bool,
	userVacancyFavoriteMap map[int64]bool,
	vacancyMonthlyViewsMap map[int64]int64,
	stats CompanyStats,
	authQueryParams string,
) {
	qw422016 := qt422016.AcquireWriter(qq422016)
	StreamOrganizersCompanyV3(qw422016, organizerFeature, headerProfiles, company, vacancies, ukrainianUniversities, czechUniversities, favorite, userVacancyFavoriteMap, vacancyMonthlyViewsMap, stats, authQueryParams)
	qt422016.ReleaseWriter(qw422016)
}

func OrganizersCompanyV3(
	organizerFeature OrganizerFeature,
	headerProfiles []SocialProviderUser,
	company Company,
	vacancies []PreparedVacancy,
	ukrainianUniversities []University,
	czechUniversities []University,
	favorite bool,
	userVacancyFavoriteMap map[int64]bool,
	vacancyMonthlyViewsMap map[int64]int64,
	stats CompanyStats,
	authQueryParams string,
) string {
	qb422016 := qt422016.AcquireByteBuffer()
	WriteOrganizersCompanyV3(qb422016, organizerFeature, headerProfiles, company, vacancies, ukrainianUniversities, czechUniversities, favorite, userVacancyFavoriteMap, vacancyMonthlyViewsMap, stats, authQueryParams)
	qs422016 := string(qb422016.B)
	qt422016.ReleaseByteBuffer(qb422016)
	return qs422016
}
